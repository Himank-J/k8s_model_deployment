apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-12-24T17:04:12Z"
    generateName: backend-deployment-79cbd5ff4d-
    labels:
      app: backend
      pod-template-hash: 79cbd5ff4d
    name: backend-deployment-79cbd5ff4d-rnwg2
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: backend-deployment-79cbd5ff4d
      uid: f8eb724a-196f-4d13-bc70-e05dddc37dae
    resourceVersion: "5743"
    uid: c04bf42b-1919-4514-9db1-6a5f1e66a2c1
  spec:
    containers:
    - image: backend:latest
      imagePullPolicy: Never
      name: backend
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kkcn6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kkcn6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://df3d0605ccc0c8113a98a6168bf8e558b8e61cdce8fcbc1b6a0129a7dea5b93e
      image: backend:latest
      imageID: docker://sha256:c07f174bfdc5994d96a6eefa6424d0f6f289cafc10390ce2f9993d82df8b7958
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-12-24T17:04:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kkcn6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.15
    podIPs:
    - ip: 10.244.0.15
    qosClass: BestEffort
    startTime: "2024-12-24T17:04:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-12-24T17:04:12Z"
    generateName: backend-deployment-79cbd5ff4d-
    labels:
      app: backend
      pod-template-hash: 79cbd5ff4d
    name: backend-deployment-79cbd5ff4d-rw76p
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: backend-deployment-79cbd5ff4d
      uid: f8eb724a-196f-4d13-bc70-e05dddc37dae
    resourceVersion: "5747"
    uid: 54d62690-1f04-42f8-b1b8-03548c84baa1
  spec:
    containers:
    - image: backend:latest
      imagePullPolicy: Never
      name: backend
      ports:
      - containerPort: 8000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mk5bd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mk5bd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T17:04:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c0346a7940ff4fa7768f6ee66e50c8565b73287381133cd8dcb560aa5d6cc3e1
      image: backend:latest
      imageID: docker://sha256:c07f174bfdc5994d96a6eefa6424d0f6f289cafc10390ce2f9993d82df8b7958
      lastState: {}
      name: backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-12-24T17:04:13Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mk5bd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.16
    podIPs:
    - ip: 10.244.0.16
    qosClass: BestEffort
    startTime: "2024-12-24T17:04:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-12-24T16:45:07Z"
    generateName: frontend-deployment-56dbbc969c-
    labels:
      app: frontend
      pod-template-hash: 56dbbc969c
    name: frontend-deployment-56dbbc969c-lcdmt
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: frontend-deployment-56dbbc969c
      uid: a23b857f-aea5-42d4-b254-e817e938da83
    resourceVersion: "4636"
    uid: 19f3ce2c-b8da-4aac-ad44-c2408b3d29d7
  spec:
    containers:
    - env:
      - name: BACKEND_URL
        valueFrom:
          configMapKeyRef:
            key: BACKEND_URL
            name: frontend-config
      image: frontend:latest
      imagePullPolicy: Never
      name: frontend
      ports:
      - containerPort: 3000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rslnj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: minikube
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rslnj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T16:45:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T16:45:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T16:45:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T16:45:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-12-24T16:45:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://48e493f5913cb5b88d175629908ae938e49bdbbafe74344df996aa1959cdaf7a
      image: frontend:latest
      imageID: docker://sha256:8eafd790a442551a215acbd63b404e7210840b2ea020c928d0ae73115e8894ab
      lastState: {}
      name: frontend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-12-24T16:45:08Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rslnj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 192.168.49.2
    hostIPs:
    - ip: 192.168.49.2
    phase: Running
    podIP: 10.244.0.14
    podIPs:
    - ip: 10.244.0.14
    qosClass: BestEffort
    startTime: "2024-12-24T16:45:07Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"backend-service","namespace":"default"},"spec":{"ports":[{"port":8000,"targetPort":8000}],"selector":{"app":"backend"},"type":"ClusterIP"}}
    creationTimestamp: "2024-12-24T16:00:54Z"
    name: backend-service
    namespace: default
    resourceVersion: "1879"
    uid: 9e8b5933-6592-4009-8aa5-d9aaac6beb20
  spec:
    clusterIP: 10.96.112.85
    clusterIPs:
    - 10.96.112.85
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app: backend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"frontend-service","namespace":"default"},"spec":{"ports":[{"port":80,"targetPort":3000}],"selector":{"app":"frontend"},"type":"ClusterIP"}}
    creationTimestamp: "2024-12-24T16:45:07Z"
    name: frontend-service
    namespace: default
    resourceVersion: "4623"
    uid: 81fce5a7-1a09-4e2a-ace0-8b0b953614b0
  spec:
    clusterIP: 10.111.226.134
    clusterIPs:
    - 10.111.226.134
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app: frontend
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-12-24T15:38:24Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "233"
    uid: 8dff9895-9031-4b79-ba3a-1c15552ba5e9
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"backend-deployment","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"backend"}},"template":{"metadata":{"labels":{"app":"backend"}},"spec":{"containers":[{"image":"backend:latest","imagePullPolicy":"Never","name":"backend","ports":[{"containerPort":8000}]}]}}}}
    creationTimestamp: "2024-12-24T17:04:11Z"
    generation: 1
    name: backend-deployment
    namespace: default
    resourceVersion: "5752"
    uid: 924ce7b9-f734-4de7-ab12-b136e0b36fb7
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: backend
      spec:
        containers:
        - image: backend:latest
          imagePullPolicy: Never
          name: backend
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2024-12-24T17:04:14Z"
      lastUpdateTime: "2024-12-24T17:04:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-12-24T17:04:11Z"
      lastUpdateTime: "2024-12-24T17:04:14Z"
      message: ReplicaSet "backend-deployment-79cbd5ff4d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"frontend-deployment","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"frontend"}},"template":{"metadata":{"labels":{"app":"frontend"}},"spec":{"containers":[{"env":[{"name":"BACKEND_URL","valueFrom":{"configMapKeyRef":{"key":"BACKEND_URL","name":"frontend-config"}}}],"image":"frontend:latest","imagePullPolicy":"Never","name":"frontend","ports":[{"containerPort":3000}]}]}}}}
    creationTimestamp: "2024-12-24T16:45:07Z"
    generation: 1
    name: frontend-deployment
    namespace: default
    resourceVersion: "4640"
    uid: f65248b3-a696-4203-bee0-48376b8a4ce8
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: frontend
      spec:
        containers:
        - env:
          - name: BACKEND_URL
            valueFrom:
              configMapKeyRef:
                key: BACKEND_URL
                name: frontend-config
          image: frontend:latest
          imagePullPolicy: Never
          name: frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-12-24T16:45:09Z"
      lastUpdateTime: "2024-12-24T16:45:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-12-24T16:45:07Z"
      lastUpdateTime: "2024-12-24T16:45:09Z"
      message: ReplicaSet "frontend-deployment-56dbbc969c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-12-24T17:04:11Z"
    generation: 1
    labels:
      app: backend
      pod-template-hash: 79cbd5ff4d
    name: backend-deployment-79cbd5ff4d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: backend-deployment
      uid: 924ce7b9-f734-4de7-ab12-b136e0b36fb7
    resourceVersion: "5750"
    uid: f8eb724a-196f-4d13-bc70-e05dddc37dae
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: backend
        pod-template-hash: 79cbd5ff4d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: backend
          pod-template-hash: 79cbd5ff4d
      spec:
        containers:
        - image: backend:latest
          imagePullPolicy: Never
          name: backend
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-12-24T16:45:07Z"
    generation: 1
    labels:
      app: frontend
      pod-template-hash: 56dbbc969c
    name: frontend-deployment-56dbbc969c
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: frontend-deployment
      uid: f65248b3-a696-4203-bee0-48376b8a4ce8
    resourceVersion: "4639"
    uid: a23b857f-aea5-42d4-b254-e817e938da83
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: frontend
        pod-template-hash: 56dbbc969c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: frontend
          pod-template-hash: 56dbbc969c
      spec:
        containers:
        - env:
          - name: BACKEND_URL
            valueFrom:
              configMapKeyRef:
                key: BACKEND_URL
                name: frontend-config
          image: frontend:latest
          imagePullPolicy: Never
          name: frontend
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
